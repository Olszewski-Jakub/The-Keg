name: 'Pull Request'
on:
  pull_request:
permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

jobs:

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Ktlint
        uses: ScaCap/action-ktlint@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          baseline: ${{ github.workspace }}/config/ktlint/baseline.xml

  security_checks:
    name: Security Analysis & Dependency Updates
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Check for Dependency Updates
        run: ./gradlew dependencyUpdates

  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: [security_checks]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant Execute Permissions for Gradle
        run: chmod +x gradlew

      - name: Run Tests
        run: ./gradlew test

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: test-results
          path: build/test-results/

  generate_test_report:
    name: Generate Test Report
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Test Results
        uses: actions/download-artifact@v4
        with:
          name: test-results

      - name: Publish Test Report
        uses: dorny/test-reporter@v1
        with:
          artifact: test-results
          name: Test Report
          path: 'test/*.xml'
          reporter: java-junit

  generate_coverage_report:
    name: Generate Coverage Report
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Generate Coverage Report
        run: ./gradlew koverXmlReport

      - name: Upload Coverage Report
        id: kover
        uses: mi-kas/kover-report@v1
        with:
          path: |
            ${{ github.workspace }}/build/reports/kover/report.xml
          title: Code Coverage
          update-comment: true
          min-coverage-overall: 75
          min-coverage-changed-files: 75
          coverage-counter-type: LINE

      - name: Upload Coverage Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: build/reports/kover/
